{# Деплой Mysql как StatefulSet #}
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: "{{ k8s_mysql_deploy_cfg['deploy_name'] }}"
  namespace: "{{ k8s_mysql_deploy_cfg['namespace'] }}"
spec:
  serviceName: "{{ k8s_mysql_deploy_cfg['deploy_name'] }}"
  replicas: {{ k8s_mysql_deploy_cfg['replicas'] }}
  selector:
    matchLabels:
      app: "{{ k8s_mysql_deploy_cfg['deploy_name'] }}"
  template:
    metadata:
      labels:
        app: "{{ k8s_mysql_deploy_cfg['deploy_name'] }}"
    spec:
      containers:
        - name: "{{ k8s_mysql_deploy_container_config['name'] }}"
          image: "{{ k8s_mysql_deploy_container_config['image'] }}:{{ k8s_mysql_deploy_container_config['tag'] }}"
          env:
            - name: "MYSQL_ROOT_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ k8s_mysql_deploy_cfg['secret_name'] }}"
                  key: "MYSQL_ROOT_PASSWORD"
            - name: "MYSQL_DATABASE"
              valueFrom:
                secretKeyRef:
                  name: "{{ k8s_mysql_deploy_cfg['secret_name'] }}"
                  key: "MYSQL_DATABASE"
            - name: "MYSQL_USER"
              valueFrom:
                secretKeyRef:
                  name: "{{ k8s_mysql_deploy_cfg['secret_name'] }}"
                  key: "MYSQL_USER"
            - name: "MYSQL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ k8s_mysql_deploy_cfg['secret_name'] }}"
                  key: "MYSQL_PASSWORD"
          ports:
            - containerPort: {{ k8s_mysql_deploy_cfg['port'] }}
          volumeMounts:
            - name: "{{ k8s_mysql_deploy_cfg['volume_name'] }}"
              mountPath: "/var/lib/mysql"
      volumes:
        - name: "{{ k8s_mysql_deploy_cfg['volume_name'] }}"
          hostPath:
            path: "{{ k8s_mysql_deploy_db_dir }}"
            type: "Directory"
      nodeSelector:
          role: "{{ k8s_mysql_deploy_cfg['node'] }}"
