{#Конфиг для Nginx для доступа к wordpress#}
---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "{{ k8s_nginx_deploy_cfg['configmap_name'] }}"
  namespace: "{{ k8s_nginx_deploy_cfg['namespace'] }}"
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    include /etc/nginx/modules-enabled/*.conf;

    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;

        include /etc/nginx/upstreams/*.conf;

        include /etc/nginx/sites-available/*;
    }
  wordpress.conf: |
    upstream wordpress_local {
        server server wordpress-service:80;
    }
  registry.conf: |
    upstream registry_upstream {
        server registry:5000;
    }
  wordpress.local.conf: |
    server {
    listen 443 ssl;
    http2 on;
    server_name wordpress.local www.wordpress.local;

    ssl_certificate /etc/nginx/ssl/wordpress.crt;
    ssl_certificate_key /etc/nginx/ssl/wordpress.key;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
    }
    location / {
        proxy_pass http://wordpress_local;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header SSL_PROTOCOL $ssl_protocol;
    }
    }
  registry.local.conf: |
    server {
        listen 443 ssl;
        http2 on;
        server_name registry;

        ssl_certificate /etc/nginx/ssl/registry.crt;
        ssl_certificate_key /etc/nginx/ssl/registry.key;

        location / {
            proxy_pass http://registry_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
  default.conf: |
    server {
    listen 80;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
    }

    server {
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/nginx/ssl/registry.crt;
    ssl_certificate_key /etc/nginx/ssl/registry.key;

    location / {
        add_header Content-Type text/html;
        return 200 '<html><head><title>200 OK</title></head><body><h1>200 OK</h1><p>This is 200!</p></body></html>';
    }

    location /image/ {
        root /usr/share/nginx/html;
    }

    #access_log  /var/log/nginx/host.access.log  main;

    }


